{"version":3,"names":["React","View","StyleSheet","SceneView","children","navigationState","lazy","layout","index","lazyPreloadDistance","addEnterListener","style","isLoading","setIsLoading","useState","Math","abs","useEffect","handleEnter","value","prevState","unsubscribe","timer","setTimeout","clearTimeout","focused","styles","route","width","absoluteFill","loading","create","flex","overflow"],"sources":["SceneView.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport type {\n  SceneRendererProps,\n  EventEmitterProps,\n  NavigationState,\n  Route,\n} from './types';\n\ntype Props<T extends Route> = SceneRendererProps &\n  EventEmitterProps & {\n    navigationState: NavigationState<T>;\n    lazy: boolean;\n    lazyPreloadDistance: number;\n    index: number;\n    children: (props: { loading: boolean }) => React.ReactNode;\n    style?: StyleProp<ViewStyle>;\n  };\n\nexport default function SceneView<T extends Route>({\n  children,\n  navigationState,\n  lazy,\n  layout,\n  index,\n  lazyPreloadDistance,\n  addEnterListener,\n  style,\n}: Props<T>) {\n  const [isLoading, setIsLoading] = React.useState(\n    Math.abs(navigationState.index - index) > lazyPreloadDistance\n  );\n\n  if (\n    isLoading &&\n    Math.abs(navigationState.index - index) <= lazyPreloadDistance\n  ) {\n    // Always render the route when it becomes focused\n    setIsLoading(false);\n  }\n\n  React.useEffect(() => {\n    const handleEnter = (value: number) => {\n      // If we're entering the current route, we need to load it\n      if (value === index) {\n        setIsLoading((prevState) => {\n          if (prevState) {\n            return false;\n          }\n          return prevState;\n        });\n      }\n    };\n\n    let unsubscribe: (() => void) | undefined;\n    let timer: NodeJS.Timeout;\n\n    if (lazy && isLoading) {\n      // If lazy mode is enabled, listen to when we enter screens\n      unsubscribe = addEnterListener(handleEnter);\n    } else if (isLoading) {\n      // If lazy mode is not enabled, render the scene with a delay if not loaded already\n      // This improves the initial startup time as the scene is no longer blocking\n      timer = setTimeout(() => setIsLoading(false), 0);\n    }\n\n    return () => {\n      unsubscribe?.();\n      clearTimeout(timer);\n    };\n  }, [addEnterListener, index, isLoading, lazy]);\n\n  const focused = navigationState.index === index;\n\n  return (\n    <View\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      style={[\n        styles.route,\n        // If we don't have the layout yet, make the focused screen fill the container\n        // This avoids delay before we are able to render pages side by side\n        layout.width\n          ? { width: layout.width }\n          : focused\n          ? StyleSheet.absoluteFill\n          : null,\n        style,\n      ]}\n    >\n      {\n        // Only render the route only if it's either focused or layout is available\n        // When layout is not available, we must not render unfocused routes\n        // so that the focused route can fill the screen\n        focused || layout.width ? children({ loading: isLoading }) : null\n      }\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  route: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAuD,cAAvD;AAkBA,eAAe,SAASC,SAAT,OASF;EAAA,IATsC;IACjDC,QADiD;IAEjDC,eAFiD;IAGjDC,IAHiD;IAIjDC,MAJiD;IAKjDC,KALiD;IAMjDC,mBANiD;IAOjDC,gBAPiD;IAQjDC;EARiD,CAStC;EACX,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,KAAK,CAACc,QAAN,CAChCC,IAAI,CAACC,GAAL,CAASX,eAAe,CAACG,KAAhB,GAAwBA,KAAjC,IAA0CC,mBADV,CAAlC;;EAIA,IACEG,SAAS,IACTG,IAAI,CAACC,GAAL,CAASX,eAAe,CAACG,KAAhB,GAAwBA,KAAjC,KAA2CC,mBAF7C,EAGE;IACA;IACAI,YAAY,CAAC,KAAD,CAAZ;EACD;;EAEDb,KAAK,CAACiB,SAAN,CAAgB,MAAM;IACpB,MAAMC,WAAW,GAAIC,KAAD,IAAmB;MACrC;MACA,IAAIA,KAAK,KAAKX,KAAd,EAAqB;QACnBK,YAAY,CAAEO,SAAD,IAAe;UAC1B,IAAIA,SAAJ,EAAe;YACb,OAAO,KAAP;UACD;;UACD,OAAOA,SAAP;QACD,CALW,CAAZ;MAMD;IACF,CAVD;;IAYA,IAAIC,WAAJ;IACA,IAAIC,KAAJ;;IAEA,IAAIhB,IAAI,IAAIM,SAAZ,EAAuB;MACrB;MACAS,WAAW,GAAGX,gBAAgB,CAACQ,WAAD,CAA9B;IACD,CAHD,MAGO,IAAIN,SAAJ,EAAe;MACpB;MACA;MACAU,KAAK,GAAGC,UAAU,CAAC,MAAMV,YAAY,CAAC,KAAD,CAAnB,EAA4B,CAA5B,CAAlB;IACD;;IAED,OAAO,MAAM;MAAA;;MACX,gBAAAQ,WAAW,UAAX;MACAG,YAAY,CAACF,KAAD,CAAZ;IACD,CAHD;EAID,CA7BD,EA6BG,CAACZ,gBAAD,EAAmBF,KAAnB,EAA0BI,SAA1B,EAAqCN,IAArC,CA7BH;EA+BA,MAAMmB,OAAO,GAAGpB,eAAe,CAACG,KAAhB,KAA0BA,KAA1C;EAEA,oBACE,oBAAC,IAAD;IACE,2BAA2B,EAAE,CAACiB,OADhC;IAEE,yBAAyB,EAAEA,OAAO,GAAG,MAAH,GAAY,qBAFhD;IAGE,KAAK,EAAE,CACLC,MAAM,CAACC,KADF,EAEL;IACA;IACApB,MAAM,CAACqB,KAAP,GACI;MAAEA,KAAK,EAAErB,MAAM,CAACqB;IAAhB,CADJ,GAEIH,OAAO,GACPvB,UAAU,CAAC2B,YADJ,GAEP,IARC,EASLlB,KATK;EAHT,GAgBI;EACA;EACA;EACAc,OAAO,IAAIlB,MAAM,CAACqB,KAAlB,GAA0BxB,QAAQ,CAAC;IAAE0B,OAAO,EAAElB;EAAX,CAAD,CAAlC,GAA6D,IAnBjE,CADF;AAwBD;AAED,MAAMc,MAAM,GAAGxB,UAAU,CAAC6B,MAAX,CAAkB;EAC/BJ,KAAK,EAAE;IACLK,IAAI,EAAE,CADD;IAELC,QAAQ,EAAE;EAFL;AADwB,CAAlB,CAAf"}