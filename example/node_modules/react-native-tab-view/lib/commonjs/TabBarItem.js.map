{"version":3,"names":["DEFAULT_ACTIVE_COLOR","DEFAULT_INACTIVE_COLOR","getActiveOpacity","position","routesLength","tabIndex","inputRange","Array","from","length","_","i","interpolate","outputRange","map","getInactiveOpacity","TabBarItemInternal","getAccessibilityLabel","getAccessible","getLabelText","getTestID","onLongPress","onPress","isFocused","route","style","inactiveColor","inactiveColorCustom","activeColor","activeColorCustom","labelStyle","onLayout","index","pressColor","pressOpacity","renderBadge","renderIcon","defaultTabWidth","renderLabel","renderLabelCustom","labelColorFromStyle","StyleSheet","flatten","color","undefined","activeOpacity","inactiveOpacity","icon","label","activeIcon","focused","inactiveIcon","styles","opacity","absoluteFill","labelProps","labelText","marginTop","activeLabel","inactiveLabel","tabStyle","isWidthSet","width","tabContainerStyle","scene","accessibilityLabel","badge","borderless","selected","pressable","item","MemoizedTabBarItemInternal","React","memo","TabBarItem","props","navigationState","rest","onPressLatest","useLatestCallback","onLongPressLatest","onLayoutLatest","routes","indexOf","create","margin","backgroundColor","textTransform","flex","alignItems","justifyContent","padding","minHeight","top","right"],"sources":["TabBarItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  StyleProp,\n  LayoutChangeEvent,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\nimport useLatestCallback from 'use-latest-callback';\nimport PlatformPressable from './PlatformPressable';\nimport type { Scene, Route, NavigationState } from './types';\n\nexport type Props<T extends Route> = {\n  position: Animated.AnimatedInterpolation;\n  route: T;\n  navigationState: NavigationState<T>;\n  activeColor?: string;\n  inactiveColor?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  getLabelText: (scene: Scene<T>) => string | undefined;\n  getAccessible: (scene: Scene<T>) => boolean | undefined;\n  getAccessibilityLabel: (scene: Scene<T>) => string | undefined;\n  getTestID: (scene: Scene<T>) => string | undefined;\n  renderLabel?: (scene: {\n    route: T;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  renderIcon?: (scene: {\n    route: T;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  renderBadge?: (scene: Scene<T>) => React.ReactNode;\n  onLayout?: (event: LayoutChangeEvent) => void;\n  onPress: () => void;\n  onLongPress: () => void;\n  defaultTabWidth?: number;\n  labelStyle?: StyleProp<TextStyle>;\n  style: StyleProp<ViewStyle>;\n};\n\nconst DEFAULT_ACTIVE_COLOR = 'rgba(255, 255, 255, 1)';\nconst DEFAULT_INACTIVE_COLOR = 'rgba(255, 255, 255, 0.7)';\n\nconst getActiveOpacity = (\n  position: Animated.AnimatedInterpolation,\n  routesLength: number,\n  tabIndex: number\n) => {\n  if (routesLength > 1) {\n    const inputRange = Array.from({ length: routesLength }, (_, i) => i);\n\n    return position.interpolate({\n      inputRange,\n      outputRange: inputRange.map((i) => (i === tabIndex ? 1 : 0)),\n    });\n  } else {\n    return 1;\n  }\n};\n\nconst getInactiveOpacity = (\n  position: Animated.AnimatedInterpolation,\n  routesLength: number,\n  tabIndex: number\n) => {\n  if (routesLength > 1) {\n    const inputRange = Array.from({ length: routesLength }, (_, i) => i);\n\n    return position.interpolate({\n      inputRange,\n      outputRange: inputRange.map((i: number) => (i === tabIndex ? 0 : 1)),\n    });\n  } else {\n    return 0;\n  }\n};\n\ntype TabBarItemInternalProps<T extends Route> = Omit<\n  Props<T>,\n  'navigationState'\n> & {\n  isFocused: boolean;\n  index: number;\n  routesLength: number;\n};\n\nconst TabBarItemInternal = <T extends Route>({\n  getAccessibilityLabel,\n  getAccessible,\n  getLabelText,\n  getTestID,\n  onLongPress,\n  onPress,\n  isFocused,\n  position,\n  route,\n  style,\n  inactiveColor: inactiveColorCustom,\n  activeColor: activeColorCustom,\n  labelStyle,\n  onLayout,\n  index: tabIndex,\n  pressColor,\n  pressOpacity,\n  renderBadge,\n  renderIcon,\n  defaultTabWidth,\n  routesLength,\n  renderLabel: renderLabelCustom,\n}: TabBarItemInternalProps<T>) => {\n  const labelColorFromStyle = StyleSheet.flatten(labelStyle || {}).color;\n\n  const activeColor =\n    activeColorCustom !== undefined\n      ? activeColorCustom\n      : typeof labelColorFromStyle === 'string'\n      ? labelColorFromStyle\n      : DEFAULT_ACTIVE_COLOR;\n  const inactiveColor =\n    inactiveColorCustom !== undefined\n      ? inactiveColorCustom\n      : typeof labelColorFromStyle === 'string'\n      ? labelColorFromStyle\n      : DEFAULT_INACTIVE_COLOR;\n\n  const activeOpacity = getActiveOpacity(position, routesLength, tabIndex);\n  const inactiveOpacity = getInactiveOpacity(position, routesLength, tabIndex);\n\n  let icon: React.ReactNode | null = null;\n  let label: React.ReactNode | null = null;\n\n  if (renderIcon) {\n    const activeIcon = renderIcon({\n      route,\n      focused: true,\n      color: activeColor,\n    });\n    const inactiveIcon = renderIcon({\n      route,\n      focused: false,\n      color: inactiveColor,\n    });\n\n    if (inactiveIcon != null && activeIcon != null) {\n      icon = (\n        <View style={styles.icon}>\n          <Animated.View style={{ opacity: inactiveOpacity }}>\n            {inactiveIcon}\n          </Animated.View>\n          <Animated.View\n            style={[StyleSheet.absoluteFill, { opacity: activeOpacity }]}\n          >\n            {activeIcon}\n          </Animated.View>\n        </View>\n      );\n    }\n  }\n\n  const renderLabel =\n    renderLabelCustom !== undefined\n      ? renderLabelCustom\n      : (labelProps: { route: T; color: string }) => {\n          const labelText = getLabelText({ route: labelProps.route });\n\n          if (typeof labelText === 'string') {\n            return (\n              <Animated.Text\n                style={[\n                  styles.label,\n                  icon ? { marginTop: 0 } : null,\n                  labelStyle,\n                  { color: labelProps.color },\n                ]}\n              >\n                {labelText}\n              </Animated.Text>\n            );\n          }\n\n          return labelText;\n        };\n\n  if (renderLabel) {\n    const activeLabel = renderLabel({\n      route,\n      focused: true,\n      color: activeColor,\n    });\n    const inactiveLabel = renderLabel({\n      route,\n      focused: false,\n      color: inactiveColor,\n    });\n\n    label = (\n      <View>\n        <Animated.View style={{ opacity: inactiveOpacity }}>\n          {inactiveLabel}\n        </Animated.View>\n        <Animated.View\n          style={[StyleSheet.absoluteFill, { opacity: activeOpacity }]}\n        >\n          {activeLabel}\n        </Animated.View>\n      </View>\n    );\n  }\n\n  const tabStyle = StyleSheet.flatten(style);\n  const isWidthSet = tabStyle?.width !== undefined;\n\n  const tabContainerStyle: ViewStyle | null = isWidthSet\n    ? null\n    : { width: defaultTabWidth };\n\n  const scene = { route };\n\n  let accessibilityLabel = getAccessibilityLabel(scene);\n\n  accessibilityLabel =\n    typeof accessibilityLabel !== 'undefined'\n      ? accessibilityLabel\n      : getLabelText(scene);\n\n  const badge = renderBadge ? renderBadge(scene) : null;\n\n  return (\n    <PlatformPressable\n      android_ripple={{ borderless: true }}\n      testID={getTestID(scene)}\n      accessible={getAccessible(scene)}\n      accessibilityLabel={accessibilityLabel}\n      accessibilityRole=\"tab\"\n      accessibilityState={{ selected: isFocused }}\n      // @ts-ignore: this is to support older React Native versions\n      accessibilityStates={isFocused ? ['selected'] : []}\n      pressColor={pressColor}\n      pressOpacity={pressOpacity}\n      delayPressIn={0}\n      onLayout={onLayout}\n      onPress={onPress}\n      onLongPress={onLongPress}\n      style={[styles.pressable, tabContainerStyle]}\n    >\n      <View pointerEvents=\"none\" style={[styles.item, tabStyle]}>\n        {icon}\n        {label}\n        {badge != null ? <View style={styles.badge}>{badge}</View> : null}\n      </View>\n    </PlatformPressable>\n  );\n};\n\nconst MemoizedTabBarItemInternal = React.memo(\n  TabBarItemInternal\n) as typeof TabBarItemInternal;\n\nfunction TabBarItem<T extends Route>(props: Props<T>) {\n  const { onPress, onLongPress, onLayout, navigationState, route, ...rest } =\n    props;\n  const onPressLatest = useLatestCallback(onPress);\n  const onLongPressLatest = useLatestCallback(onLongPress);\n  const onLayoutLatest = useLatestCallback(onLayout ? onLayout : () => {});\n\n  const tabIndex = navigationState.routes.indexOf(route);\n\n  return (\n    <MemoizedTabBarItemInternal\n      {...rest}\n      onPress={onPressLatest}\n      onLayout={onLayoutLatest}\n      onLongPress={onLongPressLatest}\n      isFocused={navigationState.index === tabIndex}\n      route={route}\n      index={tabIndex}\n      routesLength={navigationState.routes.length}\n    />\n  );\n}\n\nexport default TabBarItem;\n\nconst styles = StyleSheet.create({\n  label: {\n    margin: 4,\n    backgroundColor: 'transparent',\n    textTransform: 'uppercase',\n  },\n  icon: {\n    margin: 2,\n  },\n  item: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n    minHeight: 48,\n  },\n  badge: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  pressable: {\n    // The label is not pressable on Windows\n    // Adding backgroundColor: 'transparent' seems to fix it\n    backgroundColor: 'transparent',\n  },\n});\n"],"mappings":"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"}